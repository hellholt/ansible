---
- name: 'Set up Docker.'
  remote_user: 'root'
  block:

    - name: 'Create the Traefik configuration directory.'
      ansible.builtin.file:
        path: "{{ dck_traefik_dir }}/conf.d/"
        state: 'directory'
        mode: '0600'
        owner: 'root'
        group: 'root'

    - name: 'Create the Traefik network.'
      community.docker.docker_network:
        name: 'traefik'

    - name: 'Create the Traefik container.'
      community.general.docker_container:
        name: 'traefik'
        image: 'traefik:latest'
        restart_policy: 'unless-stopped'
        recreate: yes
        network_mode: 'host'
        volumes:
          - "{{ dck_traefik_dir }}:/etc/traefik"
          - '/var/run/docker.sock:/var/run/docker.sock'
        command: |
          --log.level=WARN
          --api.dashboard=false
          --serversTransport.insecureskipverify=true
          --providers.docker=true
          --providers.docker.watch=true
          --providers.docker.exposedByDefault=false
          --providers.file=true
          --providers.file.directory='/etc/traefik/conf.d'
          --providers.file.watch=true
          --entryPoints.web
          --entryPoints.web.address=':80'
          --entryPoints.web.http
          --entryPoints.web.http.redirections
          --entryPoints.web.http.redirections.entryPoint
          --entryPoints.web.http.redirections.entryPoint.to='websecure'
          --entryPoints.web.http.redirections.entryPoint.scheme='https'
          --entryPoints.web.forwardedHeaders.insecure
          --entryPoints.websecure
          --entryPoints.websecure.address=':443'
          --entryPoints.websecure.http.tls.certResolver={{ dck_letsencrypt_resolver_name }}
          --certificatesResolvers.{{ dck_letsencrypt_resolver_name }}.acme.email="{{ dck_letsencrypt_email }}"
          --certificatesResolvers.{{ dck_letsencrypt_resolver_name }}.acme.storage='/etc/traefik/letsencrypt.json'
          --certificatesResolvers.{{ dck_letsencrypt_resolver_name }}.acme.dnsChallenge
          --certificatesResolvers.{{ dck_letsencrypt_resolver_name }}.acme.dnsChallenge.provider='route53'
        env:
          AWS_ACCESS_KEY_ID: "{{ dck_aws_access_key_id }}"
          AWS_SECRET_ACCESS_KEY: "{{ dck_aws_secret_access_key }}"
        container_default_behavior: 'no_defaults'
