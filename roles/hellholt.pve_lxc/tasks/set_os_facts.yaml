---
- name: 'Gather facts.'
  ansible.builtin.setup:

- name: 'Detect when we are running Synology DSM.'
  stat:
    path: '/etc/synoinfo.conf'
  register: 'pve_synology_info_file'
  when: '(ansible_distribution == "OtherLinux")'

- name: 'Detect when we are running Proxmox.'
  stat:
    path: '/etc/pve'
  register: 'pve_proxmox_pve_directory'
  when: '(ansible_distribution == "Debian")'

- name: 'Set more facts.'
  ansible.builtin.set_fact:
    pve_host_uses_apk: "{{ ansible_distribution == 'Alpine' }}"
    pve_host_uses_apt: "{{ ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' }}"
    pve_host_uses_homebrew: "{{ ansible_distribution == 'MacOSX' }}"
    pve_host_is_alpine: "{{ ansible_distribution == 'Alpine' }}"
    pve_host_is_raspbian: "{{ ansible_distribution == 'Debian' and 'id' in ansible_lsb and ansible_lsb.id == 'Raspbian' }}"
    pve_host_is_debian: "{{ ansible_distribution == 'Debian' }}"
    pve_host_is_ubuntu: "{{ ansible_distribution == 'Ubuntu' }}"
    pve_host_is_debian_based: "{{ ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' }}"
    pve_host_is_mac: "{{ ansible_distribution == 'MacOSX' }}"
    pve_host_is_proxmox: "{{ ansible_distribution == 'Debian' and pve_proxmox_pve_directory.stat.exists }}"
    pve_host_is_synology: "{{ ansible_distribution == 'OtherLinux' and pve_synology_info_file.stat.exists }}"
