---
- name: 'Set some facts.'
  ansible.builtin.set_fact:
    k8s_prometheus_private_fqdn: "prometheus.{{ k8s_private_fqdn }}"
    k8s_prometheus_personal_fqdn: "prometheus.{{ k8s_personal_fqdn }}"
    k8s_grafana_private_fqdn: "grafana.{{ k8s_private_fqdn }}"
    k8s_grafana_personal_fqdn: "grafana.{{ k8s_personal_fqdn }}"

- name: 'Add Prometheus Community chart repository.'
  kubernetes.core.helm_repository:
    name: 'prometheus-community'
    repo_url: 'https://prometheus-community.github.io/helm-charts'

- name: 'Deploy Kube-Promtheus-Stack.'
  kubernetes.core.helm:
    name: 'kube-prometheus-stack'
    chart_ref: 'prometheus-community/kube-prometheus-stack'
    release_namespace: 'kube-prometheus-stack'
    create_namespace: yes
    values:
      grafana:
        enabled: yes
        namespaceOverride: ""
        adminPassword: "{{ k8s_easy_password }}"
        ingress:
          enabled: yes
          ingressClassName: 'traefik'
          annotations:
            cert-manager.io/cluster-issuer: 'letsencrypt-prod'
          labels: {}
          hosts:
            - "{{ k8s_grafana_private_fqdn }}"
            - "{{ k8s_grafana_personal_fqdn }}"
          paths:
            - '/'
          pathType: 'Prefix'
          tls:
            - secretName: "{{ k8s_grafana_private_fqdn }}-certificate"
              hosts:
                - "{{ k8s_grafana_private_fqdn }}"
            - secretName: "{{ k8s_grafana_personal_fqdn }}-certificate"
              hosts:
                - "{{ k8s_grafana_personal_fqdn }}"
      prometheus:
        enabled: yes
        ingress:
          enabled: yes
          ingressClassName: 'traefik'
          annotations:
            cert-manager.io/cluster-issuer: 'letsencrypt-prod'
          labels: {}
          hosts:
            - "{{ k8s_prometheus_private_fqdn }}"
            - "{{ k8s_prometheus_personal_fqdn }}"
          paths:
            - '/'
          pathType: 'Prefix'
          tls:
            - secretName: "{{ k8s_prometheus_private_fqdn }}-certificate"
              hosts:
                - "{{ k8s_prometheus_private_fqdn }}"
            - secretName: "{{ k8s_prometheus_personal_fqdn }}-certificate"
              hosts:
                - "{{ k8s_prometheus_personal_fqdn }}"
        serviceMonitor:
          interval: ""
          selfMonitor: yes
          replicas: 1
          podAntiAffinity: 'hard'
          storageSpec:
            volumeClaimTemplate:
              spec:
                storageClassName: 'local-storage'
                accessModes: ['ReadWriteOnce']
                resources:
                  requests:
                    storage: 32Gi
              selector: {}
