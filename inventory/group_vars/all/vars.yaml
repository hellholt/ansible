# This should always be 'python3' because it's 2021.
ansible_python_interpreter: 'python3'

# An SSH public key that I inject into newly created hosts for admin purposes.
admin_ssh_public_keys:
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDQ57vLQqOxs70+02+u6bxjK6nbq0IS6aeFcQQ6lADrq4P+xgMT0H0aPnGk+thZTPmy5RZezzMd8yWzYTVku9qPyqsEiMmZGrHNMMDAacCmB5F8PcQBgwOCA8HNgGll0vTLhYq1ARHAX2vtw6DROX6isLHmeKz0zN8FRai2hgr88wWClhRd68yDldF7UoHNj0LkpsUNpJcq/Tq7da9rXFopP0wCaQ6r+aqnQTBi8KIbS8zRU3pCZ4Vi2OoZ+Fez56ya5XhvS3OIw2awyobFmzfuWvy1gM+b9f6Ksf2skF7D7bmhsn/19K/PHE+Rb/kx3QOA3IwPpd7oCIwdsNVe7lRJX5Ubx5jXmfc/aFVTk/bF0CSyh8ycSoWElMvI81UGMuToY/hPezz/sFUxShGxX7qiVLh1qQH9iJVLk7ZS50nwKaCr8Bn5Fyf0mcsX5E1+NtBxbiyQb5161CaixhwHKDceVCDhEggTO1IyTfNTvYG3nf0VbiTnPNun4v5PH120IKRnqdjUiONe0L4zdreQKskgg7uZPgh5VAb5c6kBgtIH4IsYo6BVJ5YFj2NqZHX5W4kbLV2eYmLruL9jPA+eMpwHX7omqZgkGsPyRztpATyvgUZjnsCG0tGdczLmOX+d9PyLP1A4ha6AgmGKTYlr+MA7LB/pr2hB6zueCSuD3zeRfw== nathan@fossoway'
  - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC3qF7Pdgtwrh9o/ax3XBZqKn8lZd7VOoXvBgiUKeoR6FwOc958CUjcRHfbutukgpOw4cwvEVefY05/Nfn0VaGgQZVRUSWo4zBK3Pw46cH77sXGCpbWY3sSPeZ9pg4mti6Xatui8nJJzoqlZLkZxZ+k/HxqdbVcgnd1BeywIntGlUmh+iGR8rJL/zq9ann8QK5XcESk9ISsj5lp1o0D9h9K8pBKKL3tEUt3p3TYERcJUnf8+tmC3McQqAIwtnVke+3LnepQhr7JlYBwAO8BFaYW+hjvgTsTLCxMv4TVQQUMXD6VCcfCrNiqxyOLraRRVOU/qe8taC324GakqTz9Bwc2ZVmX4TF4eknIrhkK4nYhDtOwcRYS65e0k2gFJdPDQqZArAdW836hma2vW/2VQ6mnC44NdvLUtcZQSTBDX4pUaU7Rw5nWNPoFbgb/RmyKLjeSsn6xeIcNiU0uCcFymSQnZhNqDdCECrD64bsJzjjYbn/njLyyaL0xsyyQJ4NqoY3uh1eaKfkqKyecBJtBN9ZxN8yJxft9hY4FGfeXLC+KmuAM2orkIpO9w1bkQpAz17MTYu3NG2IMYM18RsDvm1ry985WryG0dS16dE520E/ID8TT0G0usKlWdCDvire0Pw6m/T/xzEdmAf7EndLYZXAPVUxzwWaNl82hBEEt6435rw== nathan@ashwood (Blink)'

admin_ssh_public_key: "{{ admin_ssh_public_keys[0] }}"

# A clean, consistent version of the hostname.
hostname: "{{ inventory_hostname | splitext | first | lower }}"

# Just the name of the project as a whole.  This will be used in a few places.
project_name: 'hellholt'

# Calculated IPv4 address.  Doesn't always work, usually does.
ipv4_address: "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"

# Default web options for reverse proxy.
web:
  protocol: 'https'
  port: 443
  additional_backends: []

# Homer service advertisements.
homer:
  applications: []

# Data structure for my personal preferences.
my:
  name:
    lower: 'nathan'
    full: 'Nathan Douglas'
  email:
    github: 'github@darkdell.net'
  local:
    timezone: 'America/New_York'
  domains:
    private: 'hellholt.net'
    personal: 'bitterbridge.net'
    public: 'darkdell.net'
  backup:
    repo:
      server: 'uller'
      path: '/volume1/Borg'
      passphrase: "{{ vault.easy_password }}"

# Data structure of the vault.
# vault:
#   easy_password: <string>
#   proxmox:
#     nodes:
#       ryswell:
#         api:
#           username: <string>
#           password: <string>
#   aws:
#     defaults:
#       region: 'us-east-1'
#       account_id: <account_id>
#       output: 'json'
#     profiles:
#       main:
#         key_id: <string>
#         secret_key: <string>
#       route53:
#         key_id: <string>
#         secret_key: <string>
#     route53:
#       zone_ids:
#         personal: <string>
#         public: <string>
#         private: <string>
#   docker:
#     hub:
#       username: <string>
#       password: <string>
#   torrents:
#     instances:
#       - id: 47
#         name: ubuntu
#       - id: 123
#         name: debian
#     announce_map:
#       some-domain-name: "some-replacement-domain-name"

# Name and password of IAM user for host.
host_aws_iam_user: "{{ project_name }}_host_{{ hostname }}"
host_aws_iam_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits,punctuation') }}"

# Name and password of IAM user for cluster.
cluster_aws_iam_user_prefix: "{{ project_name }}_cluster_"
cluster_aws_iam_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits,punctuation') }}"

# Some crap that appears to be too cumbersome to do automatically.
k8s_cluster_names:
  - 'karhold'
  - 'longtable'
  - 'mistwood'
  - 'ninestars'

# Plex Media Server directory.
plex_media_server_directory: '/var/lib/plexmediaserver/Library/Application Support/Plex Media Server'

# Local share prefix on Lefford.
local_share_prefix: '/leo/local/hosts'

# The following sections are per-role variables.
#
# My general approach is to have role-specific variables, namespaced, so that I
# can scope and control them accordingly.  I then set reasonable defaults for
# the general case below.

#########################
# hellholt.proxmox
#########################

# By default, use Ubuntu 21.04 as our template.
pve_template: 'ubuntu-21.04-standard_21.04-1_amd64.tar.gz'

# Set the pve_hostname to the hostname.
pve_hostname: "{{ hostname }}"

# Set the pve_description to the description.
pve_description: "{{ description }}"

# An ample mount, local storage for all LXC containers.
pve_default_mount: 'local-lvm:64,mp=/mnt/host,backup=1,size=64G'

#########################
# hellholt.setup_host
#########################

# Explicitly set the hostname instead of e.g. "debian", "nug-dougs-macbook-pro," etc.
sh_set_hostname: yes

# Some potential security risk, depending on what you run on the host.
sh_enable_passwordless_sudo: yes

# Create a non-root user.
sh_create_normal_user: yes

# This can take a while and should be avoided when possible.
sh_install_common_packages: yes

# A normal (i.e. non-root) username.
sh_normal_user_name: "{{ my.name.lower }}"

# Set the sh_hostname to the hostname.
sh_hostname: "{{ hostname }}"

# My local timezone.
sh_local_timezone: "{{ my.local.timezone }}"

# Account ID, access key, etc used to create policies, users, Route 53 records, etc.
sh_aws_region: "{{ vault.aws.defaults.region }}"
sh_aws_account_id: "{{ vault.aws.defaults.account_id }}"
sh_aws_main_access_key: "{{ vault.aws.profiles.main.key_id }}"
sh_aws_main_secret_key: "{{ vault.aws.profiles.main.secret_key }}"

# I have three domain names I use for networks:
# - "private", which resolves to LAN IP addresses (e.g. 192.168.x.x).
# - "personal", which resolves to my home IP address (e.g. 69.420.x.x).
# - "public", which is hosted in the cloud and hosts my blog, etc.
#
# Some FQDNs are used only internally, some only externally, some both,
# and some neither.  They're easy to calculate and populate.
#
# In this context, I don't really use my "public" domain name.

# A private domain name.
sh_private_domain_name: "{{ my.domains.private }}"
# A personal domain name.
sh_personal_domain_name: "{{ my.domains.personal }}"

# A Route 53 "private" zone ID.
sh_route53_private_zone_id: "{{ vault.aws.route53.zone_ids.private }}"
# A Route 53 "personal" zone ID.
sh_route53_personal_zone_id: "{{ vault.aws.route53.zone_ids.personal }}"

# Name of IAM user for host.
sh_aws_iam_host_user: "{{ host_aws_iam_user }}"
sh_aws_iam_host_password: "{{ host_aws_iam_password }}"

# Parameter pattern for SSM parameters for which the SSM policy should permit access.
sh_aws_ssm_policy_pattern: "{{ project_name }}.hosts.{{ sh_hostname }}.*"

# Prefix of SSM parameter store data for host.
sh_aws_iam_host_ssm_parameter_store_data_prefix: "{{ project_name }}.hosts."

# Docker Hub credentials.
sh_docker_hub_login: yes
sh_docker_hub_username: "{{ vault.docker.hub.username }}"
sh_docker_hub_password: "{{ vault.docker.hub.password }}"

# Borg stuff.
sh_borg_username: "{{ sh_normal_user_name }}"
sh_borg_server: "{{ my.backup.repo.server }}"
sh_borg_repo_path: "{{ my.backup.repo.path }}"
sh_borg_repository: "{{ sh_borg_username }}@{{ sh_borg_server }}:{{ sh_borg_repo_path }}/{{ sh_hostname }}"
sh_borg_cron_hour: "{{ 6 | random(seed=sh_hostname) }}"
sh_borg_cron_minute: "{{ 59 | random(seed=sh_hostname) }}"
sh_borg_cron_checks_day: "{{ 28 | random(seed=sh_hostname) }}"
sh_borg_cron_checks_hour: "{{ range(7, 24) | random(seed=sh_hostname) }}"
sh_borg_cron_checks_minute: "{{ 59 | random(seed=sh_hostname) }}"
sh_borg_source_directories: "{{ borg_source_directories }}"
sh_borg_passphrase: "{{ my.backup.repo.passphrase }}"
sh_borg_remote_path: '/usr/local/bin/borg'
sh_borg_private_ssh_key_path: '~/.ssh/id_rsa'
sh_borg_public_ssh_key_path: "{{ sh_borg_private_ssh_key_path }}.pub"

# Kubernetes stuff.
# The cluster name, e.g. "my-happy-cluster"
sh_k8s_cluster: "{{ k8s_cluster }}"
# The cluster role ('master' or 'node')
sh_k8s_role: "{{ k8s_role }}"
# All K8s hosts, regardless of role.
sh_k8s_hostnames: "{{ groups['k8s'] }}"
# All K8s masters.
sh_k8s_master_hostnames: "{{ groups['k8s_masters'] }}"
# All K8s nodes.
sh_k8s_node_hostnames: "{{ groups['k8s_nodes'] }}"
# Prefix to NFS path exported to clusters.
sh_k8s_nfs_prefix: '/leo/nfs/clusters'

# NFS mount options:
sh_nfs_mount_options: 'rw,async,no_subtree_check,no_wdelay,crossmnt,insecure,no_root_squash,insecure_locks,sec=sys'

# Prefix to FS path mounted to hosts.
sh_local_share_prefix: "{{ local_share_prefix }}"
# Hosts that exist on this Proxmox node (and can thus mount local shares).
sh_local_share_hostnames: "{{ groups[pve_cluster_id] }}"

sh_nfs_share_hosts: "{{ groups['pve_hosts'] }}"
sh_node_nfs_prefix: '/leo/nfs/hosts'

# Pi-Hole stuff.
sh_pihole_dns:
  - '208.67.222.222'
  - '208.67.220.220'
sh_pihole_password: "{{ vault.easy_password }}"

# Assets base URL.
sh_assets_base_url: 'https://raw.githubusercontent.com/hellholt/assets/main'

# MOTD base URL, from which MOTD text files can be retrieved.
sh_motd_base_url: "{{ sh_assets_base_url }}/images/houses/ansi/64"

# Homer icon base URL.
sh_homer_icon_base_url: "{{ sh_assets_base_url }}/images/houses/png/64"

# Git config.
sh_gitconfig: "{{ my.gitconfig }}"

# Dotfiles repository.
sh_dotfiles_repo: 'https://github.com/hellholt/dotfiles.git'

# Some crap that appears to be too cumbersome to do automatically.
sh_k8s_cluster_names: "{{ k8s_cluster_names }}"

# S3 bucket for this host.
sh_s3_bucket_name: "{{ project_name }}.hosts.{{ sh_hostname }}"

# Kubernetes version.
sh_kubernetes_version: '1.20'

# Plex Media Server directory.
sh_plex_media_server_directory: "{{ plex_media_server_directory }}"

# NFS server.
sh_nfs_server: "{{ groups['pve_nfs'][0] }}"

# YouTube NFS share.
sh_nfs_youtube_path: '/leo/media/youtube'

# Images NFS server.
sh_nfs_images_server: 'uller'

# Images NFS share.
sh_nfs_images_path: '/volume1/Images'

#########################
# hellholt.kubernetes
#########################

# Set the k8s_hostname to the hostname.
k8s_hostname: "{{ hostname }}"

# All K8s hosts, regardless of role or cluster.
k8s_hosts: "{{ groups['k8s'] }}"
# All K8s masters, regardless of cluster.
k8s_master_hosts: "{{ groups['k8s_masters'] }}"
# All K8s nodes, regardless of cluster.
k8s_node_hosts: "{{ groups['k8s_nodes'] }}"
# All K8s hosts in this cluster.
k8s_cluster_hosts: "{{ groups[k8s_cluster] }}"

# Account ID, access key, etc used to create policies, users, Route 53 records, etc.
k8s_aws_region: "{{ vault.aws.defaults.region }}"
k8s_aws_account_id: "{{ vault.aws.defaults.account_id }}"
k8s_aws_main_access_key: "{{ vault.aws.profiles.main.key_id }}"
k8s_aws_main_secret_key: "{{ vault.aws.profiles.main.secret_key }}"

# Name and password of IAM user for cluster.
k8s_aws_iam_cluster_user: "{{ cluster_aws_iam_user_prefix }}{{ k8s_cluster }}"
k8s_aws_iam_cluster_password: "{{ cluster_aws_iam_password }}"

# Pattern for which SSM parameters this cluster is permitted to access.
k8s_aws_ssm_policy_pattern: "{{ project_name }}.clusters.{{ k8s_cluster }}.*"

# Prefix of SSM parameter store data for cluster.
k8s_aws_iam_cluster_ssm_parameter_store_data_prefix: "{{ project_name }}.clusters."

# A private domain name.
k8s_private_domain_name: "{{ my.domains.private }}"
# A personal domain name.
k8s_personal_domain_name: "{{ my.domains.personal }}"

# A Route 53 "private" zone ID.
k8s_route53_private_zone_id: "{{ vault.aws.route53.zone_ids.private }}"
# A Route 53 "personal" zone ID.
k8s_route53_personal_zone_id: "{{ vault.aws.route53.zone_ids.personal }}"

# Prefix to NFS path exported to k8s clusters.
k8s_nfs_prefix: "{{ sh_k8s_nfs_prefix }}"

# Easy password.
k8s_easy_password: "{{ vault.easy_password }}"

# The hostname of the K8s NFS server.
k8s_nfs_server: "{{ groups['k8s_nfs'][0] }}"

# S3 bucket for this cluster.
k8s_s3_bucket_name: "{{ project_name }}.clusters.{{ k8s_cluster }}"

# GitHub token.
k8s_github_token: "{{ vault.github.tokens.clusters[k8s_cluster] }}"

#########################
# hellholt.transmission
#########################

# The root path shared with Traefik for its configuration.
tr_traefik_dir: '/traefik'

# Account ID, access key, etc used to create policies, users, Route 53 records, etc.
tr_aws_region: "{{ vault.aws.defaults.region }}"
tr_aws_account_id: "{{ vault.aws.defaults.account_id }}"
tr_aws_main_access_key: "{{ vault.aws.profiles.main.key_id }}"
tr_aws_main_secret_key: "{{ vault.aws.profiles.main.secret_key }}"

# A private domain name.
tr_private_domain_name: "{{ my.domains.private }}"

# A Route 53 "private" zone ID.
tr_route53_private_zone_id: "{{ vault.aws.route53.zone_ids.private }}"

# LetsEncrypt private domain resolver name.
tr_letsencrypt_private_domain_resolver_name: "{{ tr_private_domain_name | splitext | first }}"
# LetsEncrypt email address.
tr_letsencrypt_email: "letsencrypt@{{ tr_private_domain_name }}"

# The root directory for torrent data.
tr_root_path: '/torrents'

# The actual instances (an array of objects).
tr_instances: "{{ vault.torrents.instances }}"
# Don't reuse IDs!
# - id: 3
#   name: debian

# Announcement URL domain -> tracker name map.
tr_announce_map: "{{ vault.torrents.announce_map }}"
